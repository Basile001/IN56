package model.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the consulte table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="consulte"
 */
public abstract class BaseConsulte  implements Serializable {



	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private model.Utilisateur _login;
	private model.Faq _idFaq;


	// constructors
	public BaseConsulte () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseConsulte (
		model.Utilisateur _login,
		model.Faq _idFaq) {

		this.setLogin(_login);
		this.setIdFaq(_idFaq);
		initialize();
	}

	protected void initialize () {}



	/**
     * @hibernate.property
     *  column=EMAIL
	 * not-null=true
	 */
	public model.Utilisateur getLogin () {
		return this._login;
	}

	/**
	 * Set the value related to the column: EMAIL
	 * @param _login the EMAIL value
	 */
	public void setLogin (model.Utilisateur _login) {
		this._login = _login;
		this.hashCode = Integer.MIN_VALUE;
	}

	/**
     * @hibernate.property
     *  column=ID_FAQ
	 * not-null=true
	 */
	public model.Faq getIdFaq () {
		return this._idFaq;
	}

	/**
	 * Set the value related to the column: ID_FAQ
	 * @param _idFaq the ID_FAQ value
	 */
	public void setIdFaq (model.Faq _idFaq) {
		this._idFaq = _idFaq;
		this.hashCode = Integer.MIN_VALUE;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof model.Consulte)) return false;
		else {
			model.Consulte mObj = (model.Consulte) obj;
			if (null != this.getLogin() && null != mObj.getLogin()) {
				if (!this.getLogin().equals(mObj.getLogin())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getIdFaq() && null != mObj.getIdFaq()) {
				if (!this.getIdFaq().equals(mObj.getIdFaq())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getLogin()) {
				sb.append(this.getLogin().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getIdFaq()) {
				sb.append(this.getIdFaq().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}