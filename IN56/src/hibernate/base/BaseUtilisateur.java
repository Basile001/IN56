package hibernate.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the utilisateur table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="utilisateur"
 */
public abstract class BaseUtilisateur  implements Serializable {

	public static String PROP_CIVILITE = "Civilite";
	public static String PROP_NOM_UTILISATEUR = "NomUtilisateur";
	public static String PROP_PRENOM_UTILISATEUR = "PrenomUtilisateur";
	public static String PROP_TELEPHONE = "Telephone";
	public static String PROP_RUE = "Rue";
	public static String PROP_CODEPOSTAL = "Codepostal";
	public static String PROP_VILLE = "Ville";
	public static String PROP_ID = "Id";
	public static String PROP_PAYS = "Pays";
	public static String PROP_NUMRUE = "Numrue";
	public static String PROP_DROIT = "Droit";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private hibernate.UtilisateurPK _id;

	// fields
	private java.lang.Long _numrue;
	private java.lang.Long _codepostal;
	private java.lang.Integer _droit;
	private java.lang.String _pays;
	private java.lang.String _ville;
	private java.lang.String _prenomUtilisateur;
	private java.lang.String _rue;
	private java.lang.String _nomUtilisateur;
	private java.lang.Integer _telephone;
	private java.lang.String _civilite;


	// constructors
	public BaseUtilisateur () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseUtilisateur (hibernate.UtilisateurPK _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseUtilisateur (
		hibernate.UtilisateurPK _id,
		java.lang.String _pays,
		java.lang.String _ville,
		java.lang.String _prenomUtilisateur,
		java.lang.String _nomUtilisateur,
		java.lang.String _civilite) {

		this.setId(_id);
		this.setPays(_pays);
		this.setVille(_ville);
		this.setPrenomUtilisateur(_prenomUtilisateur);
		this.setNomUtilisateur(_nomUtilisateur);
		this.setCivilite(_civilite);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     */
	public hibernate.UtilisateurPK getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (hibernate.UtilisateurPK _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: NUMRUE
	 */
	public java.lang.Long getNumrue () {
		return _numrue;
	}

	/**
	 * Set the value related to the column: NUMRUE
	 * @param _numrue the NUMRUE value
	 */
	public void setNumrue (java.lang.Long _numrue) {
		this._numrue = _numrue;
	}


	/**
	 * Return the value associated with the column: CODEPOSTAL
	 */
	public java.lang.Long getCodepostal () {
		return _codepostal;
	}

	/**
	 * Set the value related to the column: CODEPOSTAL
	 * @param _codepostal the CODEPOSTAL value
	 */
	public void setCodepostal (java.lang.Long _codepostal) {
		this._codepostal = _codepostal;
	}


	/**
	 * Return the value associated with the column: DROIT
	 */
	public java.lang.Integer getDroit () {
		return _droit;
	}

	/**
	 * Set the value related to the column: DROIT
	 * @param _droit the DROIT value
	 */
	public void setDroit (java.lang.Integer _droit) {
		this._droit = _droit;
	}


	/**
	 * Return the value associated with the column: PAYS
	 */
	public java.lang.String getPays () {
		return _pays;
	}

	/**
	 * Set the value related to the column: PAYS
	 * @param _pays the PAYS value
	 */
	public void setPays (java.lang.String _pays) {
		this._pays = _pays;
	}


	/**
	 * Return the value associated with the column: VILLE
	 */
	public java.lang.String getVille () {
		return _ville;
	}

	/**
	 * Set the value related to the column: VILLE
	 * @param _ville the VILLE value
	 */
	public void setVille (java.lang.String _ville) {
		this._ville = _ville;
	}


	/**
	 * Return the value associated with the column: PRENOM_UTILISATEUR
	 */
	public java.lang.String getPrenomUtilisateur () {
		return _prenomUtilisateur;
	}

	/**
	 * Set the value related to the column: PRENOM_UTILISATEUR
	 * @param _prenomUtilisateur the PRENOM_UTILISATEUR value
	 */
	public void setPrenomUtilisateur (java.lang.String _prenomUtilisateur) {
		this._prenomUtilisateur = _prenomUtilisateur;
	}


	/**
	 * Return the value associated with the column: RUE
	 */
	public java.lang.String getRue () {
		return _rue;
	}

	/**
	 * Set the value related to the column: RUE
	 * @param _rue the RUE value
	 */
	public void setRue (java.lang.String _rue) {
		this._rue = _rue;
	}


	/**
	 * Return the value associated with the column: NOM_UTILISATEUR
	 */
	public java.lang.String getNomUtilisateur () {
		return _nomUtilisateur;
	}

	/**
	 * Set the value related to the column: NOM_UTILISATEUR
	 * @param _nomUtilisateur the NOM_UTILISATEUR value
	 */
	public void setNomUtilisateur (java.lang.String _nomUtilisateur) {
		this._nomUtilisateur = _nomUtilisateur;
	}


	/**
	 * Return the value associated with the column: TELEPHONE
	 */
	public java.lang.Integer getTelephone () {
		return _telephone;
	}

	/**
	 * Set the value related to the column: TELEPHONE
	 * @param _telephone the TELEPHONE value
	 */
	public void setTelephone (java.lang.Integer _telephone) {
		this._telephone = _telephone;
	}


	/**
	 * Return the value associated with the column: CIVILITE
	 */
	public java.lang.String getCivilite () {
		return _civilite;
	}

	/**
	 * Set the value related to the column: CIVILITE
	 * @param _civilite the CIVILITE value
	 */
	public void setCivilite (java.lang.String _civilite) {
		this._civilite = _civilite;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof hibernate.base.BaseUtilisateur)) return false;
		else {
			hibernate.base.BaseUtilisateur mObj = (hibernate.base.BaseUtilisateur) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}